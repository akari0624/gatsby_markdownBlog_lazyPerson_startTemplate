{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["FlexboxDivWrapper","styled_components__WEBPACK_IMPORTED_MODULE_2__","a","section","withConfig","displayName","props","oneRowWidth","LeftArticleListArea","div","RightTagsArea","query","__webpack_exports__","default","_ref2","pageContext","data","tTag","allTagsArr","edges","allMarkdownRemark","site","siteMetadata","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","map","_ref","node","key","frontmatter","title","date","gatsby__WEBPACK_IMPORTED_MODULE_1__","Link","to","fields","slug","currTags","filter","tag","lodash_kebabcase__WEBPACK_IMPORTED_MODULE_3___default","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","d","197","e","t","199","n","r","i","o","u","c","l","header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","Fragment","Helmet_default","meta","name","content","paddingTop","_755544856","prop_types_default"],"mappings":"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","file":"component---src-templates-tags-js-ddc3c86a3af1720956ad.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Styled from 'styled-components'\nimport _kababCase  from 'lodash.kebabcase'\nimport Layout from '../components/layout'\n\n\nconst FlexboxDivWrapper = Styled.section`\n  display:flex;\n  flex-direction:row;\n  flex-wrap:wrap;\n\n @media (max-width:${props => props.oneRowWidth}){\n    \n    flex-direction:column;\n    }\n\n`\n\nconst LeftArticleListArea = Styled.div`\n  width:70%;\n\n   @media (max-width:${props => props.oneRowWidth}){  \n    width:100%;\n    }\n`\n\nconst RightTagsArea = Styled.div`\n  width:30%;\n\n  @media (max-width:${props => props.oneRowWidth}){\n    margin-top:2em;\n    width:100%;\n    }\n`\n\nconst renderBlogPostTitle = posts => (\n\n  posts.map(\n    ({node}) => ( \n      <article key={`${node.frontmatter.title}${node.frontmatter.date}`}>\n        <Link to={node.fields.slug} >{node.frontmatter.date}   {node.frontmatter.title}</Link>\n      </article>\n    )\n  )\n  \n)\n\n\nconst renderOtherTags = (currTags, allTagsArr) => {\n\n  const excludeSelfTag_TagsArr = allTagsArr.filter(tag => {\n    if(tag !== currTags){\n      return true\n    }\n    return false\n\n  })\n\n  return excludeSelfTag_TagsArr.map(tag => <div key={tag}><Link to={`/tags/${_kababCase(tag)}`} >{tag}</Link></div>)\n\n}\n\n\n\nconst IndexPage = ({pageContext, data}) => {\n  const {tTag, allTagsArr} = pageContext\n  const {edges} = data.allMarkdownRemark\n  const oneRowWidth = data.site.siteMetadata.oneRowWidth\n  //console.log('pageContext',pageContext)\n  return (\n    <Layout>\n      <FlexboxDivWrapper oneRowWidth={oneRowWidth}>\n        <LeftArticleListArea oneRowWidth={oneRowWidth}>\n          <h1>標籤：{tTag}</h1>\n          {renderBlogPostTitle(edges)}\n        </LeftArticleListArea>\n        <RightTagsArea oneRowWidth={oneRowWidth}>\n          <h3>其他標籤</h3>\n          {renderOtherTags(tTag, allTagsArr)}\n        </RightTagsArea>  \n      </FlexboxDivWrapper>\n    </Layout>\n  )\n}\n\n\n\n\nexport const query = graphql`\n  query($tTag: String!) {\n\n    site {\n      siteMetadata {\n        oneRowWidth\n      }\n    }\n    \n    allMarkdownRemark(filter: {frontmatter: { tags: { in: [$tTag] } } } ) {\n     edges{\n       node {\n         frontmatter {\n           title\n           date(formatString: \"YYYY MM.DD\")\n         }\n         fields {\n          slug\n        }\n       }\n     }\n    }\n  }\n`\n\n\nexport default IndexPage\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Header from './header'\nimport './layout.css'\nimport 'prismjs/themes/prism-solarizedlight.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}